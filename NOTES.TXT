For Next Release
================

1. DONE. Fast increment/decrement when holding up/down arrow for preheat temp.  MBI 6.0 has this. Sailfish
   is a regression: you have to repeatedly press the up/down button.

2. Requests for unload before load in the filament menu (makes sense).  That is change the order of
   menu items from load right/unload right/load left/unload left to
   unload right/load right/unload left/load left.

3. Bug report in scrolling from Cymon: When trying to cancel a print if you press "up"  trying to
   take advantage of the new wrapping menu... it doesn't. First it  wraps and shows the
  "Pause at ZPos" option.  So far so good. But then if you press up again it takes you to the
   first menu but has the cursor at the top item. 

4. Some folks don't like this claimed behavior change from MBI fw.  This from Cymon: In the old
   Makerbot firmware when a print finished it would stay on the menu with the thing. This was
   actually usefull to me because my wife could then just clear the platform, press the
   button, and didn't have to know what I called the files. I kinda preferred it that way.

5. Consider making the Sailfish driver always generate a "build start notification" and "build end notification"
   rather than expect a M73 P0 to be explicit in the gcode.  NOTE: Dan has given currentState a compile time
   default of BUILD_STATE_READY.  This may address the issue.

6. DONE: extruder-hold support for 3mm extruders.

7. DONE. Run the platformAccess() command with acceleration.  Since we know the target position,
   we can compute the distance and then run it with acceleration.

8. DONE. Use pre-heat temps for filament load & unload.

9. DONE. Change default load, unload temp to 230C from 220C.  (Used when pre-heat temps are 0.)

10. DONE. Homing script for Replicator to home XY before Z.  MBI has changed theirs as well.

11. DONE. Use the X & Y homing offsets and not the axes lengths for platform clearance.  Keep 5mm clear
    of the endstops on platform clears.  Bots still use Z axis lengths for clearing as Z home offsets aren't
    appropriate.

12. DONE. Test support of .x3g file name extension.  Worked for G3Firmware.  Needed to be added for MightyBoard.

13. DONE. Correct levelling script.  Ensure that all scripts contain a M73 P0 command at the start.

14. DONE. Firmware returns 39 as the min. required RepG in response to a version query.  (Will want to
    bump to 40 after November release of RepG 40.)

15. DONE. Default altshell to "Use M320/M321" for SF-47 & 50.  Leave unchecked as the default for SF-35
    on the assumption that folks using SF-35 are likely using Jetty 3.5 firmware.

16. Investigate dual extrusion issue: https://groups.google.com/forum/#!topic/jetty-firmware/UVuu7ck7hiI (possibly ToM too)

17. DONE. SVN release in version menu

18. FIXED Investigate circle facets https://groups.google.com/forum/#!topic/jetty-firmware/-0enQ9S1gWk (possibly ToM too)
    Newer acceleration planning algorithm has resolved this issue for the people who reported it (Laird, Hellphish).
    Was also possible to tune out.

19. Investigate filament reversal before moving to cooling position:
    https://groups.google.com/forum/#!topic/jetty-firmware/ck-H6849qUw (possibly ToM too)

20. DONE: ToM BlinkM: Fix thunderstorms / SOS:  https://groups.google.com/forum/#!topic/jetty-firmware/ck-H6849qUw

21. DONE: Add support for "software variant id" to s3g Advanced Version query response.

22. DONE: Fix issue with home offset calibrations.

23. DONE: 3mm Extruder Hold (http://groups.google.com/group/jetty-firmware/browse_thread/thread/2a18d095b9831256)

24. BOGUS: Add support for extruder B for ToM / Cupcake in RepG's onboard prefs.
    User had the wrong machine type selected and saw the old Jetty Firmware stuff with only one extruder, despite
    claims to the contrary.

25. NO: Look into putting "Pause" at the top of the list when pressing "M" during a print.
    Doesn't help: you hit "M" then the list comes up then you have to press
    a button again.  As long as you are hovering waiting for the right moment,
    go ahead and press "M", scroll down to Pause, and then wait and press it
    at the right moment.  Leave "M" then "Abort" for emergencies.

26. DONE: Extruder Hold for all bots, not just ToM / Cupcakes?

27. Fixed build names wrapping to the next line on Replicators.

28. Add "heater timeout on cancel"?  MBI has it constrained to 0 - 30 minutes. EEPROM value is 0x0244, single byte, minutes, default 0.
    Doesn't make sense for ToM / Cupcake as they reset the uProcessor on a
    cancel.

29. MBI implemented "Toolheads remain hot when exiting filament scripts
    IF preheat is active."  I think we already leave them hot.

30. MBI implemented "toolhead temps do not reset during reset - they only
    reset when a 'set toolhead temp' is received after a 'Start print'.
    The idea here is to keep preheat ON when starting a print"

31. MBI "changed the default XY max accels to 1000".  Hmmm, we already had
    them at 1000.  I suspect that's a reference to the normal-move and
    extruder-only max accels which we have at 2000.

    Turns out, the claim was a reference to older code which used 500 mm/s^s
    as the default.

32. DONE: Jetguy requests, "Would it be possible to add the menu option to
    change the temps while printing, based on the temp override functionality
    to fine adjust the temperature. I find this would be usefull especially
    with PLA."

33. DONE: Added scrolling build stats for Replicator 2's with a spare line
    in the LCD display (no more than two heaters to display).

34. Fixed line count display in Build Stats for Replicators.

35. Add "Extruder Hold" to Replicator parameter settings menu.  It's already
    in for ToMs/Cupcakes (4.1 release) and already in RepG for all bots.

36. DONE: SD Card folder support on all bots.  Works from RepG as well.

37. DONE: No more length limit of 30 characters on name of files to print.  The full 64 bytes
    allowed by FAT-16 is now permitted.  No more seeing a file in the LCD display which cannot
    be printed because it cannot be found.  Or worse yet, truncation of its name matches another
    file on the card.

38. FIXED: Folks found that the Gen 4 LCD's extrusion menu's speed setting seemed to be ignored
    during filament unloading and loading whilst using Pause @ ZPos.  Turns out that the speed
    was not be computed correctly.  Issue existed in both the extrusion menu and Pause @ ZPos
    jog menu. 

39. DONE: Added support for both old and new toolhead offset systems for all bots.  The
    stored EEPROM toolhead offsets are left as-is.  However, at run-time the firmware adjusts
    the offsets to conform to the selected system (old or new) by adding 33.0 mm or subtracting
    out 33.0 mm.  (On a Replicator 2, a value of 35.0 mm is instead used.)

40. DONE: Added to RepG the UI controls to set the Toolhead Offset System EEPROM setting.

41. FIXED: On ToMs and Cupcakes, advancing or removing filament during
    Pause @ ZPos would run too fast.

42. FIXED: On ToMs and Cupcakes advancing or removing filament during
    Pause @ ZPos would only work with one extruder, Tool 0.  Could
    not be used during dualstrusion to unload or load Tool 1.

43. DONE: RepG MightySailfish driver.  Supports Replicator 1, Replicator 2,	
    Replicator 2X.

44. DONE: Added ToM + Mk6, and ToM + ABP machine types.  Added Replicator 1 & Replicator 2
    Sailfish machine types.

45. Cleaned up sample .gcode files in RepG to include M73 P0 / M73 P100 commands.

46. For ToMs & Cupcakes, when printing from an SD card with NO Gen 4 LCD
 display, the bot will return to a "ready" state once the print is finished.
 RepG users do not need to tell the bot to reset from RepG; the bot will
 be ready for more printing.

 Previously, the bot remained in a state which allowed uses with LCD displays
 to repeat the print ("Print another?").  Clearly, that's an annoyance to
 users without LCD displays.


Dan/Jetty Changes
=================

1. Rev 18: Ported to avr-gcc 4.6.2 (needed changing from static PROGMEM to const static PROGMEM)
2. Bumped version to 5.5 internal release 2
3. Rev 22: Fixes SDCard bug where Volume name occasionally is displayed in file list, also ignores hidden/system and directories. Cost 10 bytes.
4. Rev 23: Fixes buffer underflow when SDCard filename length < 4.  Optimized .s3g file recognition code and removed duplication. Saved 8 bytes.
5. Rev 24: Adds scrolling filenames for filenames that are longer than the screensize.  Cost 258 bytes.
6. Rev 25: Adds top/bottom wrap around to menus / file lists.  Better UI for the user.  Cost 8 bytes.
7. Rev 26: UI Fix.  Continuous button in SDCard Menu was too slow due to slow menu update rate.  Cost 28 bytes.
8. Rev 27: Bug Fix.  Jog menu required fast press to change from X->Y.  Added button to continuousButtons to allow selected continuous button treatment.  Cost 20 bytes.
9. Rev 28: UI Fix. Jogging continued after button was released in Jog Menu, raising possibility of head crash when moving close to head.  Fixed via implementation of isButtonPressed, now stops instantly on release.  Cost 116 bytes.
10. Rev 29: UI Fix.  Added continuous button for up/down in Main Menu / Build Menu for fast movement through the menu list.  (Also requires Rev 27).  Cost 52 bytes.
11. Rev 30: UI Fix.  Long filenames often causes issues for users.  We now notify the user that the filename is too long.  Largest filename that can be printed is 30 characters max including the .s3g   Cost 70 bytes.
12. Rev 31: UI Fix.  Adjusted timing on Rev29 for continuous button on Main/Utility menu.  Requires Rev29.  Cost 0 bytes.
13. Rev 32: Adding axis_steps_per_mm in firmware in preparation for acceleration and filament counter.  Also requires Rev 33.  Cost 36 bytes.
14. Rev 33: ReplicatorG: Added automatic update of axis_steps_per_mm in firmware if different from the machines xml.
15. Rev 35: Error in s3g_protocol spec. in s3g/ repo.  Incorrectly states that
    the DDA field for 'queue point extended' and 'queue point extended new'
    is a uint32.  However, RepG emits it as a Java 'int' and both the firmwares
    consume it as an int32_t.
16. Rev 43: Added filament lifetime and trip counter.  Also added floating point printing.  Cost 4788 bytes.
17. Rev 45: Removed hard coding of X/Y/Z/A/B steps per mm.  The values are now sent from RepG from the machine xml, and stored in eeprom.  Values are now read from eeprom.  Also requires Rev 32, 33 and 46.  Cost 72 bytes.
18. Rev 46: ReplicatorG, automatic changing of steps per mm in firmware now causes reset of firmware to read the new values in.  Also requires Rev 32, 33 and 45.
19. Rev 50: ReplicatorG, updated s3g-decompiler.py to understand the new commands that were added when the MightyBoardFirmware was created.
20. Rev 51: Added override gcode temp to settings (Called OverrideGT).  When enabled, non-zero temperature set points for Tool0/1 and Platform are overridden with the values stored in the Preheat Settings.  Useful for adjusting temperatures without having to rebuild .s3g's, and for novices that don't know how to change start.gcode.  Cost 212 bytes.
21. Rev 53: UI Fix.  When filament loading / unloading, now beeps when extruder starts moving to remind user it's extruding. (the extruder is quiet and often can't be heard over the volume of the fans).  Cost 24 bytes. (will reduce to 12 bytes when Piezo.cc is thread safe)
22. Rev 54: Axis lengths are no longer hard coded, they're uploaded automatically from ReplicatorG with reasonable defaults. Z Axis length now takes account of Homing Offset.  Requires Rev 55.  Cost 210 bytes.
23. Rev 55: ReplicatorG: Added automatic update of axis lengths in firmware if different from the machines xml.  Requires Rev 54.
24. Rev 56: Updating MightyBoardFirmware to 5.6.  Cost 2 bytes. (not sure why it cost 2 bytes)
25. Rev 57: Updating ReplicatorG to require MightyBoardFirmware 5.6.
26. Rev 60: Added ZPosition to Build Stats and increased build stats update rate.  Cost 212 bytes.
27. Rev 61: UI Bug Fix: Build Stats showed as 6 h 4 m, and would truncate mins and hours >= 10 to 1 digit.  Cost 0 bytes.
28. Rev 66: Added Profiles with default profiles for Abs and Pla.  Cost 2366 bytes.
29. Rev 68: Added Home Offsets menu.  Cost 736 bytes.
30. Rev 69: Bug Fix, steps per mm not set to defaults before RepG connection. Cost 40 bytes.
31. Rev 70: Changed floatToString to a right justifiable writeFloat in LiquidCrystalSerial.  Saved 190 bytes.
32. Rev 83: Merged with github:makerbot/MightyBoard/master commit 35f45f206a "updated s3g_handling doc" 27th July 2012.  Cost 1140 bytes.
33. Rev 84: Added ERASE_EEPROM_ON_EVERY_BOOT for diagnostic purposes (disabled by default, enable in Configuration.hh).  Cost 0 bytes.
34. Rev 85: Added Eeprom Erase/Restore/Save to SD Card menu.  Enabled via EEPROM_MENU_ENABLE in Configuration.hh.
35. Rev 102: Reading past the end of a buffer when writing to EEPROM. Fixed in EepromMap.cc.
36. Rev 119: Completely removing DebugPacketProcessor when it's not in use.  Saved 26 bytes, and 44 bytes of SRAM
37. Rev 120: __clz_tab is 256 bytes, and is a lookup table for int to float conversion in gcc.  Removed it by linking in -lm at the end of the link: http://gcc.gnu.org/bugzilla/show_bug.cgi?id=29524  Saved 3194 byte and 264 bytes of SRAM
38. Rev 121: Removed duplicate monitor, splash and welcome menu from motherboard, using the one in Menu.hh instead.  Saved 144 bytes and 133 bytes of SRAM
39. Rev 125/126: Changed errorMessage/errorResponse to use PROGMEM char * instead of char * to save SRAM.  Cost 776 bytes and saved 708 bytes of SRAM
40. Rev 127: Moved sqrt_table into PROGMEM.  Cost 48 bytes and saves 772 bytes of SRAM. [Note: subsequently removed entirely as no longer needed.]
41. Rev 128-345: Adding acceleration
42. Rev 347-348: Rewriting Piezo to be thread safe and use no interrupts to improve CPU load.
43: Rev 351: Making STACK_PAINT part of release.
44. Rev 357-371: Clearing Build Platform on Pause / Cancel / Pause@ZPos
45. Rev 372-373: Stepper speed up.
46. Rev 393-411: SRAM / Menus optimization
47. Rev 435: Adding Ditto printing


Possible Memory Optimization
============================

(Suggested areas for further investigation to see if optimization is
possible)

1. Remove Snake Game (accessed by holding UP and RIGHT for 10 seconds)

2. Optimize text usage: Menu_FR.hh, Menu_locales.hh

3. UtilityScripts.cc (maybe look at storing on sd card) - Also LEVEL_PLATE in Menu_locales.hh / Menu_FR.hh

4. Remove Blink LEDs menu item

5. Use of -mcall-prologues will reclaim about 4.3k

6. Refactor SettingsMenu: drawItem/handleCounterUpdate in Menu.cc

7.  Look in, say, RepG 29 and see if any of those old commands are no longer
generated by the drivers.  If so, we can save some code space by removing
the 'case' clauses which handle them.

8. Can possibly save around 188 bytes by having Hosts.cc/handleReadEeprom() and
Hosts.cc/handleWriteEeprom() use fixed size data arrays rather than arrays whose
size are determined at run time.  Going the run-time route added 188 bytes in
G3Firmware.  However, this requires picking a maximum supported packet size for
those two s3g commands.  s3g.py uses 32 bytes.

9. 30 bytes can be saved by changing pop8 to a #define in Command.cc


Reminders
=========



Comments
========

1. The s3g tests likely won't run on Windows as written.  Each test suite that opens a serial
connection to the bot should close that connection in its tearDown() routine.  At present,
that's not happening.  POSIX will allow multiple opens on the same device: there's no device
locking by default.  However, Windows has device locking by default and the additional
connection open attempts to the device will fail.  test_GetToolStatus() would even need to
close the suite's (s3gUserFunctionTests) open connection first and then re-establish
it afterwards.


Specifications
==============

Speeds upto 300mm/s for Y and 340mm/s for X have been tested.
(To achieve these speeds you need to increase A/B and possible X/Y max feedrates in the RepG .xml)


Best Results Configuration
==========================

Skeinforge:

	1. Fill:  Change from Hexagon to Line Fill.  There's a bug in hexagon fill that means
	   100% fill is less than 100% fill on alternate layers (as tested on a cube).

	   [DONE for SF-50 8/31/2012]

	2. Enable or disable Altshell based on preference.  If enabled, in Speed/Perimeter, set Perimeter Feed Rate
	   and Flow Rate Multipliers to 1.0.  This is because Alt Shell and Perimeter Rates do similar things, so either or,
	   but not both.

	3. Retraction in the default Skeinforge settings is too aggressive.  In Dimension, change Retraction Distance
	   from 1.0 to 0.0, and make sure Restart extra distance is 0.0

	4. Fill in skeinforge should be Loops->Perimeter-Infill

Printing:

	1. Print from SD Card to keep the acceleration buffer populated

	2. Print the object near the back of the object to reduce vibration effects due
	   to the HBP.

	3. Print at a higher temperature because you're pushing more plastic through at
	   higher speeds and to reduce jamming.  Adding 20C is reasonable for ABS
	   at 100-120mm/s.

	4. Keep extruder clean of filament dust to avoid stripping the filament.

Ditto:

	1. Make sure objects width is less than the distance between the 2 nozzles

	2. Build an object as usual in RepG to either the left or right extruder

	3. Enable "Ditto Print: in settings and print.

Layer Heights Less Than 0.27mm:

	1. 100, 50 and 10 Micron prints are possible with PrintOMatic in ABS @ 100mm/s (0.1, 0.05, 0.01mm layer heights)

	2. For prints smaller than 100 micron, you will need to set deprime=0 for the extruder (or tune it less than the default 34).
	   This is because at smaller layer heights, there's less flow and large deprimes will take away too much.


New Commands
============

M320/M321, #define HOST_CMD_SET_ACCELERATION_TOGGLE	156	- Used for Altshell
#define HOST_CMD_QUEUE_POINT_NEW_EXT   155			- New movement command with dda_rate, distance and feedrate pre-calculated


Wish List
=========

1. Credits screen

2. RGB Led commands for BlinkM compatability (ToM)
